{"ast":null,"code":"import React,{useState,useContext}from'react';import{useNavigate}from'react-router-dom';import{AuthContext}from'/fitnet/fitNet/ui/src/context/AuthContext';import'./Register.css';import{FaUser,FaEnvelope,FaLock}from\"react-icons/fa\";import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Register(){const[username,setUsername]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[firstName,setFirstName]=useState('');const[lastName,setLastName]=useState('');const[birthDate,setBirthDate]=useState('');const[message,setMessage]=useState('');const{login}=useContext(AuthContext);const navigate=useNavigate();const validatePassword=password=>{const minLength=/.{8,}/;const uppercase=/[A-Z]/;const specialChar=/[!@#$%^&*(),.?\":{}|<>]/;if(!minLength.test(password)){return'Password must be at least 8 characters long.';}if(!uppercase.test(password)){return'Password must contain at least one uppercase letter.';}if(!specialChar.test(password)){return'Password must contain at least one special character.';}return null;};const handleRegister=async e=>{e.preventDefault();const passwordError=validatePassword(password);if(passwordError){setMessage(passwordError);return;}const response=await fetch('http://localhost:5000/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,password,firstName,lastName,birthDate})});const data=await response.json();if(data.success){login({username,email});navigate('/');}else{setMessage('Registration failed: '+data.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"register\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",required:true,value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",required:true,value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"First Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,value:firstName,onChange:e=>setFirstName(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Last Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,value:lastName,onChange:e=>setLastName(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"Birth Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",required:true,value:birthDate,onChange:e=>setBirthDate(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});};export default Register;","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","FaUser","FaEnvelope","FaLock","Link","jsx","_jsx","jsxs","_jsxs","Register","username","setUsername","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","birthDate","setBirthDate","message","setMessage","login","navigate","validatePassword","minLength","uppercase","specialChar","test","handleRegister","e","preventDefault","passwordError","response","fetch","method","headers","body","JSON","stringify","data","json","success","className","children","onSubmit","type","required","value","onChange","target"],"sources":["C:/fitnet/fitNet/ui/src/components/Pages/Register/Register.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '/fitnet/fitNet/ui/src/context/AuthContext';\r\nimport './Register.css';\r\nimport { FaUser,FaEnvelope,FaLock } from \"react-icons/fa\";\r\nimport { Link} from 'react-router-dom';\r\nfunction Register () {\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const { login } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const validatePassword = (password) => {\r\n        const minLength = /.{8,}/;\r\n        const uppercase = /[A-Z]/;\r\n        const specialChar = /[!@#$%^&*(),.?\":{}|<>]/;\r\n\r\n        if (!minLength.test(password)) {\r\n            return 'Password must be at least 8 characters long.';\r\n        }\r\n        if (!uppercase.test(password)) {\r\n            return 'Password must contain at least one uppercase letter.';\r\n        }\r\n        if (!specialChar.test(password)) {\r\n            return 'Password must contain at least one special character.';\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const passwordError = validatePassword(password);\r\n        if (passwordError) {\r\n            setMessage(passwordError);\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://localhost:5000/auth/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, email, password, firstName, lastName, birthDate }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            login({ username, email });\r\n            navigate('/');\r\n        } else {\r\n            setMessage('Registration failed: ' + data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <h2>Register</h2>\r\n            <form onSubmit={handleRegister}>\r\n                <label>Username:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    required \r\n                    value={username} \r\n                    onChange={(e) => setUsername(e.target.value)} \r\n                />\r\n                <label>Email:</label>\r\n                <input \r\n                    type=\"email\" \r\n                    required \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)} \r\n                />\r\n                <label>Password:</label>\r\n                <input \r\n                    type=\"password\" \r\n                    required \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)} \r\n                />\r\n                <label>First Name:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    required \r\n                    value={firstName} \r\n                    onChange={(e) => setFirstName(e.target.value)} \r\n                />\r\n                <label>Last Name:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    required \r\n                    value={lastName} \r\n                    onChange={(e) => setLastName(e.target.value)} \r\n                />\r\n                <label>Birth Date:</label>\r\n                <input \r\n                    type=\"date\" \r\n                    required \r\n                    value={birthDate} \r\n                    onChange={(e) => setBirthDate(e.target.value)} \r\n                />\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}