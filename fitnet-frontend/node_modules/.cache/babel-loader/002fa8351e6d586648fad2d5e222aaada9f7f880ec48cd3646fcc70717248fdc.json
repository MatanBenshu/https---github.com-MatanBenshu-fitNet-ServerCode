{"ast":null,"code":"var _jsxFileName = \"C:\\\\fitnet\\\\fitNet\\\\fitnet-frontend\\\\src\\\\components\\\\CreatePost\\\\CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext.js';\nimport './CreatePost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const [sportType, setSportType] = useState('');\n  const [activityDate, setActivityDate] = useState('');\n  const [ageRange, setAgeRange] = useState('');\n  const [minParticipants, setMinParticipants] = useState('');\n  const [maxParticipants, setMaxParticipants] = useState('');\n  const [activityInfo, setActivityInfo] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    authState\n  } = useContext(AuthContext);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: authState.user._id,\n        sportType,\n        activityDate,\n        ageRange,\n        minParticipants,\n        maxParticipants,\n        activityInfo\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      setMessage('Post created successfully!');\n    } else {\n      setMessage('Error creating post: ' + data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sport Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: sportType,\n        onChange: e => setSportType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Activity Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: activityDate,\n        onChange: e => setActivityDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Age Range:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: ageRange,\n        onChange: e => setAgeRange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Minimum Participants:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        required: true,\n        value: minParticipants,\n        onChange: e => setMinParticipants(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Maximum Participants:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        required: true,\n        value: maxParticipants,\n        onChange: e => setMaxParticipants(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Activity Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: activityInfo,\n        onChange: e => setActivityInfo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"YIc+9QBcGkzse3rqsknE/4MluzY=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","jsxDEV","_jsxDEV","CreatePost","_s","sportType","setSportType","activityDate","setActivityDate","ageRange","setAgeRange","minParticipants","setMinParticipants","maxParticipants","setMaxParticipants","activityInfo","setActivityInfo","message","setMessage","authState","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","userId","user","_id","data","json","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/fitnet/fitNet/fitnet-frontend/src/components/CreatePost/CreatePost.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext.js';\r\nimport './CreatePost.css';\r\n\r\nconst CreatePost = () => {\r\n    const [sportType, setSportType] = useState('');\r\n    const [activityDate, setActivityDate] = useState('');\r\n    const [ageRange, setAgeRange] = useState('');\r\n    const [minParticipants, setMinParticipants] = useState('');\r\n    const [maxParticipants, setMaxParticipants] = useState('');\r\n    const [activityInfo, setActivityInfo] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch('http://localhost:5000/posts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                userId: authState.user._id,\r\n                sportType,\r\n                activityDate,\r\n                ageRange,\r\n                minParticipants,\r\n                maxParticipants,\r\n                activityInfo\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setMessage('Post created successfully!');\r\n        } else {\r\n            setMessage('Error creating post: ' + data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-post\">\r\n            <h2>Create Post</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Sport Type:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={sportType}\r\n                    onChange={(e) => setSportType(e.target.value)}\r\n                />\r\n                <label>Activity Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    required\r\n                    value={activityDate}\r\n                    onChange={(e) => setActivityDate(e.target.value)}\r\n                />\r\n                <label>Age Range:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={ageRange}\r\n                    onChange={(e) => setAgeRange(e.target.value)}\r\n                />\r\n                <label>Minimum Participants:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    required\r\n                    value={minParticipants}\r\n                    onChange={(e) => setMinParticipants(e.target.value)}\r\n                />\r\n                <label>Maximum Participants:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    required\r\n                    value={maxParticipants}\r\n                    onChange={(e) => setMaxParticipants(e.target.value)}\r\n                />\r\n                <label>Activity Information:</label>\r\n                <textarea\r\n                    required\r\n                    value={activityInfo}\r\n                    onChange={(e) => setActivityInfo(e.target.value)}\r\n                ></textarea>\r\n                <button type=\"submit\">Create Post</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}